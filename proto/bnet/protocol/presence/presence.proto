syntax = "proto2";
package bnet.protocol.presence;

// Proto extractor compiled unit - https://github.com/HearthSim/proto-extractor

import "bnet/protocol/protocol.proto";

// ref: bnet.protocol.presence.ChannelState
message ChannelState {
	optional bnet.protocol.EntityId entity_id = 1;
	repeated FieldOperation field_operation = 2;
	optional bool healing = 3;
}

// ref: bnet.protocol.presence.Field
message Field {
	optional FieldKey key = 1;
	optional bnet.protocol.Variant value = 2;
}

// ref: bnet.protocol.presence.FieldKey
message FieldKey {
	optional uint32 program = 1;
	optional uint32 group = 2;
	optional uint32 field = 3;
	optional uint64 index = 4;
}

// ref: bnet.protocol.presence.FieldOperation
message FieldOperation {
	// ref: bnet.protocol.presence.FieldOperation/Types/OperationType
	enum OperationType {
		SET = 0;
		CLEAR = 1;
	}

	optional Field field = 1;
	optional OperationType operation = 2;
}

// ref: bnet.protocol.presence.OwnershipRequest
message OwnershipRequest {
	optional bnet.protocol.EntityId entity_id = 1;
	optional bool release_ownership = 2;
}

// ref: bnet.protocol.presence.QueryRequest
message QueryRequest {
	optional bnet.protocol.EntityId entity_id = 1;
	repeated FieldKey key = 2;
}

// ref: bnet.protocol.presence.QueryResponse
message QueryResponse {
	repeated Field field = 2;
}

// ref: bnet.protocol.presence.RichPresence
message RichPresence {
	optional fixed32 program_id = 1;
	optional fixed32 stream_id = 2;
	optional uint32 index = 3;
}

// ref: bnet.protocol.presence.SubscribeNotificationRequest
message SubscribeNotificationRequest {
	optional bnet.protocol.EntityId entity_id = 1;
}

// ref: bnet.protocol.presence.SubscribeRequest
message SubscribeRequest {
	optional bnet.protocol.EntityId agent_id = 1;
	optional bnet.protocol.EntityId entity_id = 2;
	optional uint64 object_id = 3;
	repeated fixed32 program_id = 4;
}

// ref: bnet.protocol.presence.UnsubscribeRequest
message UnsubscribeRequest {
	optional bnet.protocol.EntityId agent_id = 1;
	optional bnet.protocol.EntityId entity_id = 2;
}

// ref: bnet.protocol.presence.UpdateRequest
message UpdateRequest {
	optional bnet.protocol.EntityId entity_id = 1;
	repeated FieldOperation field_operation = 2;
}

