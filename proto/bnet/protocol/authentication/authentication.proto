syntax = "proto2";
package bnet.protocol.authentication;

// Proto extractor compiled unit - https://github.com/HearthSim/proto-extractor

import "bnet/protocol/account/account.proto";
import "bnet/protocol/protocol.proto";

// ref: bnet.protocol.authentication.AccountSettingsNotification
message AccountSettingsNotification {
	repeated bnet.protocol.account.AccountLicense licenses = 1;
	optional bool is_using_rid = 2;
	optional bool is_playing_from_igr = 3;
	optional bool can_receive_voice = 4;
	optional bool can_send_voice = 5;
}

// ref: bnet.protocol.authentication.GameAccountSelectedRequest
message GameAccountSelectedRequest {
	optional uint32 result = 1;
	optional bnet.protocol.EntityId game_account = 2;
}

// ref: bnet.protocol.authentication.GenerateSSOTokenRequest
message GenerateSSOTokenRequest {
	optional fixed32 program = 1;
}

// ref: bnet.protocol.authentication.GenerateSSOTokenResponse
message GenerateSSOTokenResponse {
	optional bytes sso_id = 1;
	optional bytes sso_secret = 2;
}

// ref: bnet.protocol.authentication.LogonQueueUpdateRequest
message LogonQueueUpdateRequest {
	optional uint32 position = 1;
	optional uint64 estimated_time = 2;
	optional uint64 eta_deviation_in_sec = 3;
}

// ref: bnet.protocol.authentication.LogonRequest
message LogonRequest {
	optional string program = 1;
	optional string platform = 2;
	optional string locale = 3;
	optional string email = 4;
	optional string version = 5;
	optional int32 application_version = 6;
	optional bool public_computer = 7;
	optional bytes sso_id = 8;
	optional bool disconnect_on_cookie_fail = 9;
	optional bool allow_logon_queue_notifications = 10;
	optional bool web_client_verification = 11;
	optional bytes cached_web_credentials = 12;
}

// ref: bnet.protocol.authentication.LogonResult
message LogonResult {
	optional uint32 error_code = 1;
	optional bnet.protocol.EntityId account = 2;
	repeated bnet.protocol.EntityId game_account = 3;
	optional string email = 4;
	repeated uint32 available_region = 5;
	optional uint32 connected_region = 6;
	optional string battle_tag = 7;
	optional string geoip_country = 8;
}

// ref: bnet.protocol.authentication.LogonUpdateRequest
message LogonUpdateRequest {
	optional uint32 error_code = 1;
}

// ref: bnet.protocol.authentication.MemModuleLoadRequest
message MemModuleLoadRequest {
	optional bnet.protocol.ContentHandle handle = 1;
	optional bytes key = 2;
	optional bytes input = 3;
}

// ref: bnet.protocol.authentication.MemModuleLoadResponse
message MemModuleLoadResponse {
	optional bytes data = 1;
}

// ref: bnet.protocol.authentication.ModuleLoadRequest
message ModuleLoadRequest {
	optional bnet.protocol.ContentHandle module_handle = 1;
	optional bytes message = 2;
}

// ref: bnet.protocol.authentication.ModuleMessageRequest
message ModuleMessageRequest {
	optional int32 module_id = 1;
	optional bytes message = 2;
}

// ref: bnet.protocol.authentication.ModuleNotification
message ModuleNotification {
	optional int32 module_id = 2;
	optional uint32 result = 3;
}

// ref: bnet.protocol.authentication.SelectGameAccountRequest
message SelectGameAccountRequest {
	optional bnet.protocol.EntityId game_account = 1;
}

// ref: bnet.protocol.authentication.ServerStateChangeRequest
message ServerStateChangeRequest {
	optional uint32 state = 1;
	optional uint64 event_time = 2;
}

// ref: bnet.protocol.authentication.VerifyWebCredentialsRequest
message VerifyWebCredentialsRequest {
	optional bytes web_credentials = 1;
}

// ref: bnet.protocol.authentication.VersionInfo
message VersionInfo {
	optional uint32 number = 1;
	optional string patch = 2;
	optional bool is_optional = 3;
	optional uint64 kick_time = 4;
}

// ref: bnet.protocol.authentication.VersionInfoNotification
message VersionInfoNotification {
	optional VersionInfo version_info = 1;
}

