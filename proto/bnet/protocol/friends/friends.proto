syntax = "proto2";
package bnet.protocol.friends;

// Proto extractor compiled unit - https://github.com/HearthSim/proto-extractor

import "bnet/protocol/invitation/invitation.proto";
import "bnet/protocol/protocol.proto";

// ref: bnet.protocol.friends.AssignRoleRequest
message AssignRoleRequest {
	optional bnet.protocol.EntityId agent_id = 1;
	optional bnet.protocol.EntityId target_id = 2;
	repeated int32 role = 3;
}

// ref: bnet.protocol.friends.Friend
message Friend {
	optional bnet.protocol.EntityId id = 1;
	repeated bnet.protocol.Attribute attribute = 2;
	repeated uint32 role = 3 [packed=true];
	optional uint64 privileges = 4;
	optional uint64 attributes_epoch = 5;
	optional string full_name = 6;
	optional string battle_tag = 7;
}

// ref: bnet.protocol.friends.FriendInvitation
message FriendInvitation {
	optional bool first_received = 1;
	repeated uint32 role = 2 [packed=true];
}

// ref: bnet.protocol.friends.FriendInvitationParams
message FriendInvitationParams {
	optional string target_email = 1;
	optional string target_battle_tag = 2;
	optional string inviter_battle_tag = 3;
	optional string inviter_full_name = 4;
	optional string invitee_display_name = 5;
	repeated uint32 role = 6 [packed=true];
}

// ref: bnet.protocol.friends.FriendNotification
message FriendNotification {
	optional Friend target = 1;
	optional bnet.protocol.EntityId game_account_id = 2;
}

// ref: bnet.protocol.friends.GenericFriendRequest
message GenericFriendRequest {
	optional bnet.protocol.EntityId agent_id = 1;
	optional bnet.protocol.EntityId target_id = 2;
}

// ref: bnet.protocol.friends.GenericFriendResponse
message GenericFriendResponse {
	optional Friend target_friend = 1;
}

// ref: bnet.protocol.friends.InvitationNotification
message InvitationNotification {
	optional bnet.protocol.invitation.Invitation invitation = 1;
	optional bnet.protocol.EntityId game_account_id = 2;
	optional uint32 reason = 3;
}

// ref: bnet.protocol.friends.SubscribeToFriendsRequest
message SubscribeToFriendsRequest {
	optional bnet.protocol.EntityId agent_id = 1;
	optional uint64 object_id = 2;
}

// ref: bnet.protocol.friends.SubscribeToFriendsResponse
message SubscribeToFriendsResponse {
	optional uint32 max_friends = 1;
	optional uint32 max_received_invitations = 2;
	optional uint32 max_sent_invitations = 3;
	repeated bnet.protocol.Role role = 4;
	repeated Friend friends = 5;
	repeated bnet.protocol.invitation.Invitation sent_invitations = 6;
	repeated bnet.protocol.invitation.Invitation received_invitations = 7;
}

// ref: bnet.protocol.friends.UnsubscribeToFriendsRequest
message UnsubscribeToFriendsRequest {
	optional bnet.protocol.EntityId agent_id = 1;
	optional uint64 object_id = 2;
}

// ref: bnet.protocol.friends.UpdateFriendStateNotification
message UpdateFriendStateNotification {
	optional Friend changed_friend = 1;
	optional bnet.protocol.EntityId game_account_id = 2;
}

// ref: bnet.protocol.friends.UpdateFriendStateRequest
message UpdateFriendStateRequest {
	optional bnet.protocol.EntityId agent_id = 1;
	optional bnet.protocol.EntityId target_id = 2;
	repeated bnet.protocol.Attribute attribute = 3;
	optional uint64 attributes_epoch = 4;
}

// ref: bnet.protocol.friends.ViewFriendsRequest
message ViewFriendsRequest {
	optional bnet.protocol.EntityId agent_id = 1;
	optional bnet.protocol.EntityId target_id = 2;
	repeated uint32 role = 3 [packed=true];
}

// ref: bnet.protocol.friends.ViewFriendsResponse
message ViewFriendsResponse {
	repeated Friend friends = 1;
}

